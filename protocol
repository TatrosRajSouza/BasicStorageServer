This file shows how the protocol used in this application works.

Enumerator used to represent the command being issued associated with the arguments
it receive and who sends this type of command.
public enum StatusType {
	GET 			<key>				- Client
	PUT 			<key, value>		- Client
	CONNECT								- Client
	DISCONNECT							- Client
	
	GET_ERROR 		<key> 				- Server - response to GET
	GET_SUCCESS		<key, value>		- Server - response to GET
	PUT_SUCCESS		<key, value>		- Server - response to PUT
	PUT_UPDATE		<key, value>		- Server - response to PUT
	PUT_ERROR 		<key, value>		- Server - response to PUT
	DELETE_SUCCESS 	<key, value>		- Server - response to PUT
	DELETE_ERROR 	<key, value>		- Server - response to PUT
	CONNECT_SUCCESS <message>			- Server - response to CONNECT
	CONNECT_ERROR						- Server - response to CONNECT
	DISCONNECT_SUCCESS					- Server - response to DISCONNECT
	FAILED 			<message>			- Server - response to wrong command
}

Structure of the message being sent from server to client (in bytes)
Parts in square brackets [] are optional

command '\n' [argument1 '\n' [argument2 '\n']] '\r'  